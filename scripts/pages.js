var pages = [{'name': 'class ListenBubble(context: Context, pixelsPerSecond: Float) : ScrollingGradient', 'description':'io.spokestack.tray.ListenBubble', 'location':'-spokestack-tray/io.spokestack.tray/-listen-bubble/index.html', 'searchKey':'ListenBubble'},
{'name': 'fun ListenBubble(context: Context, pixelsPerSecond: Float)', 'description':'io.spokestack.tray.ListenBubble.ListenBubble', 'location':'-spokestack-tray/io.spokestack.tray/-listen-bubble/-listen-bubble.html', 'searchKey':'ListenBubble'},
{'name': 'open override fun draw(canvas: Canvas)', 'description':'io.spokestack.tray.ListenBubble.draw', 'location':'-spokestack-tray/io.spokestack.tray/-listen-bubble/draw.html', 'searchKey':'draw'},
{'name': 'open override fun draw(canvas: Canvas)', 'description':'io.spokestack.tray.ScrollingGradient.draw', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/draw.html', 'searchKey':'draw'},
{'name': 'class MicButton(context: Context, attributes: AttributeSet) : View', 'description':'io.spokestack.tray.MicButton', 'location':'-spokestack-tray/io.spokestack.tray/-mic-button/index.html', 'searchKey':'MicButton'},
{'name': 'fun MicButton(context: Context, attributes: AttributeSet)', 'description':'io.spokestack.tray.MicButton.MicButton', 'location':'-spokestack-tray/io.spokestack.tray/-mic-button/-mic-button.html', 'searchKey':'MicButton'},
{'name': 'inner class GestureHandler : GestureDetector.SimpleOnGestureListener', 'description':'io.spokestack.tray.MicButton.GestureHandler', 'location':'-spokestack-tray/io.spokestack.tray/-mic-button/-gesture-handler/index.html', 'searchKey':'GestureHandler'},
{'name': 'fun GestureHandler()', 'description':'io.spokestack.tray.MicButton.GestureHandler.GestureHandler', 'location':'-spokestack-tray/io.spokestack.tray/-mic-button/-gesture-handler/-gesture-handler.html', 'searchKey':'GestureHandler'},
{'name': 'open override fun onFling(e1: MotionEvent?, e2: MotionEvent?, velocityX: Float, velocityY: Float): Boolean', 'description':'io.spokestack.tray.MicButton.GestureHandler.onFling', 'location':'-spokestack-tray/io.spokestack.tray/-mic-button/-gesture-handler/on-fling.html', 'searchKey':'onFling'},
{'name': 'open override fun onTouchEvent(event: MotionEvent): Boolean', 'description':'io.spokestack.tray.MicButton.onTouchEvent', 'location':'-spokestack-tray/io.spokestack.tray/-mic-button/on-touch-event.html', 'searchKey':'onTouchEvent'},
{'name': 'open override fun performClick(): Boolean', 'description':'io.spokestack.tray.MicButton.performClick', 'location':'-spokestack-tray/io.spokestack.tray/-mic-button/perform-click.html', 'searchKey':'performClick'},
{'name': 'fun setOrientation(orientation: TrayConfig.Orientation)', 'description':'io.spokestack.tray.MicButton.setOrientation', 'location':'-spokestack-tray/io.spokestack.tray/-mic-button/set-orientation.html', 'searchKey':'setOrientation'},
{'name': 'open class ScrollingGradient(context: Context, pixelsPerSecond: Float) : Drawable, Animatable', 'description':'io.spokestack.tray.ScrollingGradient', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/index.html', 'searchKey':'ScrollingGradient'},
{'name': 'fun ScrollingGradient(context: Context, pixelsPerSecond: Float)', 'description':'io.spokestack.tray.ScrollingGradient.ScrollingGradient', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/-scrolling-gradient.html', 'searchKey':'ScrollingGradient'},
{'name': 'inner class Updater : TimeAnimator.TimeListener', 'description':'io.spokestack.tray.ScrollingGradient.Updater', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/-updater/index.html', 'searchKey':'Updater'},
{'name': 'fun Updater()', 'description':'io.spokestack.tray.ScrollingGradient.Updater.Updater', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/-updater/-updater.html', 'searchKey':'Updater'},
{'name': 'open override fun onTimeUpdate(animation: TimeAnimator, totalTime: Long, deltaTime: Long)', 'description':'io.spokestack.tray.ScrollingGradient.Updater.onTimeUpdate', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/-updater/on-time-update.html', 'searchKey':'onTimeUpdate'},
{'name': 'open override fun getOpacity(): Int', 'description':'io.spokestack.tray.ScrollingGradient.getOpacity', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/get-opacity.html', 'searchKey':'getOpacity'},
{'name': 'open override fun isRunning(): Boolean', 'description':'io.spokestack.tray.ScrollingGradient.isRunning', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/is-running.html', 'searchKey':'isRunning'},
{'name': 'open override fun setAlpha(alpha: Int)', 'description':'io.spokestack.tray.ScrollingGradient.setAlpha', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/set-alpha.html', 'searchKey':'setAlpha'},
{'name': 'open override fun setColorFilter(colorFilter: ColorFilter?)', 'description':'io.spokestack.tray.ScrollingGradient.setColorFilter', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/set-color-filter.html', 'searchKey':'setColorFilter'},
{'name': 'open override fun start()', 'description':'io.spokestack.tray.ScrollingGradient.start', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/start.html', 'searchKey':'start'},
{'name': 'open override fun stop()', 'description':'io.spokestack.tray.ScrollingGradient.stop', 'location':'-spokestack-tray/io.spokestack.tray/-scrolling-gradient/stop.html', 'searchKey':'stop'},
{'name': 'object SpokestackFactory', 'description':'io.spokestack.tray.SpokestackFactory', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-factory/index.html', 'searchKey':'SpokestackFactory'},
{'name': 'fun getInstance(trayConfig: TrayConfig, context: Context, lifecycle: Lifecycle, listener: SpokestackTray.SpokestackListener): Spokestack', 'description':'io.spokestack.tray.SpokestackFactory.getInstance', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-factory/get-instance.html', 'searchKey':'getInstance'},
{'name': 'fun getInstance(config: TrayConfig): SpokestackTray', 'description':'io.spokestack.tray.SpokestackTray.Companion.getInstance', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/-companion/get-instance.html', 'searchKey':'getInstance'},
{'name': 'class SpokestackTray : Fragment, MotionLayout.TransitionListener', 'description':'io.spokestack.tray.SpokestackTray', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/index.html', 'searchKey':'SpokestackTray'},
{'name': 'object Companion', 'description':'io.spokestack.tray.SpokestackTray.Companion', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/-companion/index.html', 'searchKey':'Companion'},
{'name': 'inner class SpokestackListener : SpokestackAdapter', 'description':'io.spokestack.tray.SpokestackTray.SpokestackListener', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/-spokestack-listener/index.html', 'searchKey':'SpokestackListener'},
{'name': 'fun SpokestackListener()', 'description':'io.spokestack.tray.SpokestackTray.SpokestackListener.SpokestackListener', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/-spokestack-listener/-spokestack-listener.html', 'searchKey':'SpokestackListener'},
{'name': 'open override fun error(module: SpokestackModule, err: Throwable)', 'description':'io.spokestack.tray.SpokestackTray.SpokestackListener.error', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/-spokestack-listener/error.html', 'searchKey':'error'},
{'name': 'open override fun nluResult(result: NLUResult)', 'description':'io.spokestack.tray.SpokestackTray.SpokestackListener.nluResult', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/-spokestack-listener/nlu-result.html', 'searchKey':'nluResult'},
{'name': 'open override fun speechEvent(event: SpeechContext.Event, context: SpeechContext)', 'description':'io.spokestack.tray.SpokestackTray.SpokestackListener.speechEvent', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/-spokestack-listener/speech-event.html', 'searchKey':'speechEvent'},
{'name': 'open override fun trace(module: SpokestackModule, message: String)', 'description':'io.spokestack.tray.SpokestackTray.SpokestackListener.trace', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/-spokestack-listener/trace.html', 'searchKey':'trace'},
{'name': 'open override fun ttsEvent(event: TTSEvent)', 'description':'io.spokestack.tray.SpokestackTray.SpokestackListener.ttsEvent', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/-spokestack-listener/tts-event.html', 'searchKey':'ttsEvent'},
{'name': 'fun audioEnabled(): Boolean', 'description':'io.spokestack.tray.SpokestackTray.audioEnabled', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/audio-enabled.html', 'searchKey':'audioEnabled'},
{'name': 'fun isOpen(): Boolean', 'description':'io.spokestack.tray.SpokestackTray.isOpen', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/is-open.html', 'searchKey':'isOpen'},
{'name': 'open override fun onAttach(context: Context)', 'description':'io.spokestack.tray.SpokestackTray.onAttach', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-attach.html', 'searchKey':'onAttach'},
{'name': 'open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View', 'description':'io.spokestack.tray.SpokestackTray.onCreateView', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-create-view.html', 'searchKey':'onCreateView'},
{'name': 'open override fun onDetach()', 'description':'io.spokestack.tray.SpokestackTray.onDetach', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-detach.html', 'searchKey':'onDetach'},
{'name': 'open override fun onPause()', 'description':'io.spokestack.tray.SpokestackTray.onPause', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-pause.html', 'searchKey':'onPause'},
{'name': 'open override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray)', 'description':'io.spokestack.tray.SpokestackTray.onRequestPermissionsResult', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-request-permissions-result.html', 'searchKey':'onRequestPermissionsResult'},
{'name': 'open override fun onResume()', 'description':'io.spokestack.tray.SpokestackTray.onResume', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-resume.html', 'searchKey':'onResume'},
{'name': 'open override fun onSaveInstanceState(outState: Bundle)', 'description':'io.spokestack.tray.SpokestackTray.onSaveInstanceState', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-save-instance-state.html', 'searchKey':'onSaveInstanceState'},
{'name': 'open override fun onTransitionChange(p0: MotionLayout?, startId: Int, endId: Int, progress: Float)', 'description':'io.spokestack.tray.SpokestackTray.onTransitionChange', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-transition-change.html', 'searchKey':'onTransitionChange'},
{'name': 'open override fun onTransitionCompleted(layout: MotionLayout?, state: Int)', 'description':'io.spokestack.tray.SpokestackTray.onTransitionCompleted', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-transition-completed.html', 'searchKey':'onTransitionCompleted'},
{'name': 'open override fun onTransitionStarted(p0: MotionLayout?, startId: Int, endId: Int)', 'description':'io.spokestack.tray.SpokestackTray.onTransitionStarted', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-transition-started.html', 'searchKey':'onTransitionStarted'},
{'name': 'open override fun onTransitionTrigger(p0: MotionLayout?, trigger: Int, pos: Boolean, prog: Float)', 'description':'io.spokestack.tray.SpokestackTray.onTransitionTrigger', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/on-transition-trigger.html', 'searchKey':'onTransitionTrigger'},
{'name': 'fun say(prompt: VoicePrompt)', 'description':'io.spokestack.tray.SpokestackTray.say', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/say.html', 'searchKey':'say'},
{'name': 'fun setOpen(open: Boolean, listen: Boolean)', 'description':'io.spokestack.tray.SpokestackTray.setOpen', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/set-open.html', 'searchKey':'setOpen'},
{'name': 'fun spokestack(): Spokestack', 'description':'io.spokestack.tray.SpokestackTray.spokestack', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray/spokestack.html', 'searchKey':'spokestack'},
{'name': 'class SpokestackTrayFactory(trayConfig: TrayConfig) : FragmentFactory', 'description':'io.spokestack.tray.SpokestackTrayFactory', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray-factory/index.html', 'searchKey':'SpokestackTrayFactory'},
{'name': 'fun SpokestackTrayFactory(trayConfig: TrayConfig)', 'description':'io.spokestack.tray.SpokestackTrayFactory.SpokestackTrayFactory', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray-factory/-spokestack-tray-factory.html', 'searchKey':'SpokestackTrayFactory'},
{'name': 'open override fun instantiate(classLoader: ClassLoader, className: String): Fragment', 'description':'io.spokestack.tray.SpokestackTrayFactory.instantiate', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray-factory/instantiate.html', 'searchKey':'instantiate'},
{'name': 'interface SpokestackTrayListener', 'description':'io.spokestack.tray.SpokestackTrayListener', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray-listener/index.html', 'searchKey':'SpokestackTrayListener'},
{'name': 'abstract fun onClassification(result: NLUResult): VoicePrompt?', 'description':'io.spokestack.tray.SpokestackTrayListener.onClassification', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray-listener/on-classification.html', 'searchKey':'onClassification'},
{'name': 'abstract fun onClose()', 'description':'io.spokestack.tray.SpokestackTrayListener.onClose', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray-listener/on-close.html', 'searchKey':'onClose'},
{'name': 'abstract fun onError(error: Throwable)', 'description':'io.spokestack.tray.SpokestackTrayListener.onError', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray-listener/on-error.html', 'searchKey':'onError'},
{'name': 'abstract fun onLog(message: String)', 'description':'io.spokestack.tray.SpokestackTrayListener.onLog', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray-listener/on-log.html', 'searchKey':'onLog'},
{'name': 'abstract fun onOpen()', 'description':'io.spokestack.tray.SpokestackTrayListener.onOpen', 'location':'-spokestack-tray/io.spokestack.tray/-spokestack-tray-listener/on-open.html', 'searchKey':'onOpen'},
{'name': 'class TrayConfig', 'description':'io.spokestack.tray.TrayConfig', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/index.html', 'searchKey':'TrayConfig'},
{'name': 'data class Builder(orientation: TrayConfig.Orientation, haptic: Boolean, sayGreeting: Boolean, greeting: String, ttsMode: SynthesisRequest.Mode, voice: String, clientId: String?, clientSecret: String?, properties: HashMap<String, Any>, logLevel: Int, wakewordModelURL: String?, nluURL: String?, refreshModels: Boolean, editTranscript: (String) -> String?, listener: SpokestackTrayListener?, transcriptEditor: TranscriptEditor?)', 'description':'io.spokestack.tray.TrayConfig.Builder', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/index.html', 'searchKey':'Builder'},
{'name': 'fun Builder(orientation: TrayConfig.Orientation, haptic: Boolean, sayGreeting: Boolean, greeting: String, ttsMode: SynthesisRequest.Mode, voice: String, clientId: String?, clientSecret: String?, properties: HashMap<String, Any>, logLevel: Int, wakewordModelURL: String?, nluURL: String?, refreshModels: Boolean, editTranscript: (String) -> String?, listener: SpokestackTrayListener?, transcriptEditor: TranscriptEditor?)', 'description':'io.spokestack.tray.TrayConfig.Builder.Builder', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/-builder.html', 'searchKey':'Builder'},
{'name': 'fun build(): TrayConfig', 'description':'io.spokestack.tray.TrayConfig.Builder.build', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/build.html', 'searchKey':'build'},
{'name': 'fun copy(orientation: TrayConfig.Orientation, haptic: Boolean, sayGreeting: Boolean, greeting: String, ttsMode: SynthesisRequest.Mode, voice: String, clientId: String?, clientSecret: String?, properties: HashMap<String, Any>, logLevel: Int, wakewordModelURL: String?, nluURL: String?, refreshModels: Boolean, editTranscript: (String) -> String?, listener: SpokestackTrayListener?, transcriptEditor: TranscriptEditor?): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.copy', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(text: String, voice: String, expectFollowup: Boolean): VoicePrompt', 'description':'io.spokestack.tray.VoicePrompt.copy', 'location':'-spokestack-tray/io.spokestack.tray/-voice-prompt/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(isSystem: Boolean, content: String): Message', 'description':'io.spokestack.tray.message.Message.copy', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/copy.html', 'searchKey':'copy'},
{'name': 'fun credentials(clientId: String, clientSecret: String): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.credentials', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/credentials.html', 'searchKey':'credentials'},
{'name': 'fun greeting(value: String): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.greeting', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/greeting.html', 'searchKey':'greeting'},
{'name': 'fun haptic(value: Boolean): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.haptic', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/haptic.html', 'searchKey':'haptic'},
{'name': 'fun logLevel(value: Int): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.logLevel', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/log-level.html', 'searchKey':'logLevel'},
{'name': 'fun nluURL(value: String?): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.nluURL', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/nlu-u-r-l.html', 'searchKey':'nluURL'},
{'name': 'fun orientation(value: TrayConfig.Orientation): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.orientation', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/orientation.html', 'searchKey':'orientation'},
{'name': 'fun refreshModels(value: Boolean): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.refreshModels', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/refresh-models.html', 'searchKey':'refreshModels'},
{'name': 'fun sayGreeting(value: Boolean): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.sayGreeting', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/say-greeting.html', 'searchKey':'sayGreeting'},
{'name': 'fun ttsMode(value: SynthesisRequest.Mode): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.ttsMode', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/tts-mode.html', 'searchKey':'ttsMode'},
{'name': 'fun ttsVoice(value: String): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.ttsVoice', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/tts-voice.html', 'searchKey':'ttsVoice'},
{'name': 'fun wakewordModelURL(value: String?): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.wakewordModelURL', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/wakeword-model-u-r-l.html', 'searchKey':'wakewordModelURL'},
{'name': 'fun withListener(listener: SpokestackTrayListener): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.withListener', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/with-listener.html', 'searchKey':'withListener'},
{'name': 'fun withProperty(key: String, value: Any): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.withProperty', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/with-property.html', 'searchKey':'withProperty'},
{'name': 'fun withSpokestackBuilder(value: Spokestack.Builder): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.withSpokestackBuilder', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/with-spokestack-builder.html', 'searchKey':'withSpokestackBuilder'},
{'name': 'fun withTranscriptEditor(editor: TranscriptEditor): TrayConfig.Builder', 'description':'io.spokestack.tray.TrayConfig.Builder.withTranscriptEditor', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-builder/with-transcript-editor.html', 'searchKey':'withTranscriptEditor'},
{'name': 'enum Orientation : Enum<TrayConfig.Orientation> ', 'description':'io.spokestack.tray.TrayConfig.Orientation', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-orientation/index.html', 'searchKey':'Orientation'},
{'name': 'LEFT()', 'description':'io.spokestack.tray.TrayConfig.Orientation.LEFT', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-orientation/-l-e-f-t/index.html', 'searchKey':'LEFT'},
{'name': 'RIGHT()', 'description':'io.spokestack.tray.TrayConfig.Orientation.RIGHT', 'location':'-spokestack-tray/io.spokestack.tray/-tray-config/-orientation/-r-i-g-h-t/index.html', 'searchKey':'RIGHT'},
{'name': 'class TrayView(trayContext: Context, attributeSet: AttributeSet) : ConstraintLayout, View.OnTouchListener', 'description':'io.spokestack.tray.TrayView', 'location':'-spokestack-tray/io.spokestack.tray/-tray-view/index.html', 'searchKey':'TrayView'},
{'name': 'fun TrayView(trayContext: Context, attributeSet: AttributeSet)', 'description':'io.spokestack.tray.TrayView.TrayView', 'location':'-spokestack-tray/io.spokestack.tray/-tray-view/-tray-view.html', 'searchKey':'TrayView'},
{'name': 'open override fun onTouch(v: View, event: MotionEvent): Boolean', 'description':'io.spokestack.tray.TrayView.onTouch', 'location':'-spokestack-tray/io.spokestack.tray/-tray-view/on-touch.html', 'searchKey':'onTouch'},
{'name': 'class TrayViewModel : ViewModel', 'description':'io.spokestack.tray.TrayViewModel', 'location':'-spokestack-tray/io.spokestack.tray/-tray-view-model/index.html', 'searchKey':'TrayViewModel'},
{'name': 'fun TrayViewModel()', 'description':'io.spokestack.tray.TrayViewModel.TrayViewModel', 'location':'-spokestack-tray/io.spokestack.tray/-tray-view-model/-tray-view-model.html', 'searchKey':'TrayViewModel'},
{'name': 'fun addMessage(message: Message)', 'description':'io.spokestack.tray.TrayViewModel.addMessage', 'location':'-spokestack-tray/io.spokestack.tray/-tray-view-model/add-message.html', 'searchKey':'addMessage'},
{'name': 'fun getMessages(): LiveData<ArrayList<Message>>', 'description':'io.spokestack.tray.TrayViewModel.getMessages', 'location':'-spokestack-tray/io.spokestack.tray/-tray-view-model/get-messages.html', 'searchKey':'getMessages'},
{'name': 'fun updateLastUserMessage(text: String)', 'description':'io.spokestack.tray.TrayViewModel.updateLastUserMessage', 'location':'-spokestack-tray/io.spokestack.tray/-tray-view-model/update-last-user-message.html', 'searchKey':'updateLastUserMessage'},
{'name': 'data class VoicePrompt(text: String, voice: String, expectFollowup: Boolean)', 'description':'io.spokestack.tray.VoicePrompt', 'location':'-spokestack-tray/io.spokestack.tray/-voice-prompt/index.html', 'searchKey':'VoicePrompt'},
{'name': 'fun VoicePrompt(text: String, voice: String, expectFollowup: Boolean)', 'description':'io.spokestack.tray.VoicePrompt.VoicePrompt', 'location':'-spokestack-tray/io.spokestack.tray/-voice-prompt/-voice-prompt.html', 'searchKey':'VoicePrompt'},
{'name': 'operator fun component1(): String', 'description':'io.spokestack.tray.VoicePrompt.component1', 'location':'-spokestack-tray/io.spokestack.tray/-voice-prompt/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Boolean', 'description':'io.spokestack.tray.message.Message.component1', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component2(): String', 'description':'io.spokestack.tray.VoicePrompt.component2', 'location':'-spokestack-tray/io.spokestack.tray/-voice-prompt/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'io.spokestack.tray.message.Message.component2', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component3(): Boolean', 'description':'io.spokestack.tray.VoicePrompt.component3', 'location':'-spokestack-tray/io.spokestack.tray/-voice-prompt/component3.html', 'searchKey':'component3'},
{'name': 'fun downloadFile(fileURL: String, downloadDir: String): String', 'description':'io.spokestack.tray.downloadFile', 'location':'-spokestack-tray/io.spokestack.tray/download-file.html', 'searchKey':'downloadFile'},
{'name': 'data class Message(isSystem: Boolean, content: String) : Parcelable', 'description':'io.spokestack.tray.message.Message', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/index.html', 'searchKey':'Message'},
{'name': 'object CREATOR : Parcelable.Creator<Message> ', 'description':'io.spokestack.tray.message.Message.CREATOR', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/-c-r-e-a-t-o-r/index.html', 'searchKey':'CREATOR'},
{'name': 'open override fun createFromParcel(parcel: Parcel): Message', 'description':'io.spokestack.tray.message.Message.CREATOR.createFromParcel', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/-c-r-e-a-t-o-r/create-from-parcel.html', 'searchKey':'createFromParcel'},
{'name': 'open override fun newArray(size: Int): Array<Message?>', 'description':'io.spokestack.tray.message.Message.CREATOR.newArray', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/-c-r-e-a-t-o-r/new-array.html', 'searchKey':'newArray'},
{'name': 'open override fun describeContents(): Int', 'description':'io.spokestack.tray.message.Message.describeContents', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/describe-contents.html', 'searchKey':'describeContents'},
{'name': 'open operator override fun equals(other: Any?): Boolean', 'description':'io.spokestack.tray.message.Message.equals', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/equals.html', 'searchKey':'equals'},
{'name': 'open override fun hashCode(): Int', 'description':'io.spokestack.tray.message.Message.hashCode', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/hash-code.html', 'searchKey':'hashCode'},
{'name': 'open override fun writeToParcel(dest: Parcel, flags: Int)', 'description':'io.spokestack.tray.message.Message.writeToParcel', 'location':'-spokestack-tray/io.spokestack.tray.message/-message/write-to-parcel.html', 'searchKey':'writeToParcel'},
{'name': 'class MessageAdapter(context: Context) : ListAdapter<Message, RecyclerView.ViewHolder> ', 'description':'io.spokestack.tray.message.MessageAdapter', 'location':'-spokestack-tray/io.spokestack.tray.message/-message-adapter/index.html', 'searchKey':'MessageAdapter'},
{'name': 'fun MessageAdapter(context: Context)', 'description':'io.spokestack.tray.message.MessageAdapter.MessageAdapter', 'location':'-spokestack-tray/io.spokestack.tray.message/-message-adapter/-message-adapter.html', 'searchKey':'MessageAdapter'},
{'name': 'class BubbleViewHolder(msgLayout: LinearLayout) : RecyclerView.ViewHolder', 'description':'io.spokestack.tray.message.MessageAdapter.BubbleViewHolder', 'location':'-spokestack-tray/io.spokestack.tray.message/-message-adapter/-bubble-view-holder/index.html', 'searchKey':'BubbleViewHolder'},
{'name': 'fun BubbleViewHolder(msgLayout: LinearLayout)', 'description':'io.spokestack.tray.message.MessageAdapter.BubbleViewHolder.BubbleViewHolder', 'location':'-spokestack-tray/io.spokestack.tray.message/-message-adapter/-bubble-view-holder/-bubble-view-holder.html', 'searchKey':'BubbleViewHolder'},
{'name': 'open override fun getItemCount(): Int', 'description':'io.spokestack.tray.message.MessageAdapter.getItemCount', 'location':'-spokestack-tray/io.spokestack.tray.message/-message-adapter/get-item-count.html', 'searchKey':'getItemCount'},
{'name': 'open override fun getItemViewType(position: Int): Int', 'description':'io.spokestack.tray.message.MessageAdapter.getItemViewType', 'location':'-spokestack-tray/io.spokestack.tray.message/-message-adapter/get-item-view-type.html', 'searchKey':'getItemViewType'},
{'name': 'open override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int)', 'description':'io.spokestack.tray.message.MessageAdapter.onBindViewHolder', 'location':'-spokestack-tray/io.spokestack.tray.message/-message-adapter/on-bind-view-holder.html', 'searchKey':'onBindViewHolder'},
{'name': 'open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder', 'description':'io.spokestack.tray.message.MessageAdapter.onCreateViewHolder', 'location':'-spokestack-tray/io.spokestack.tray.message/-message-adapter/on-create-view-holder.html', 'searchKey':'onCreateViewHolder'},
{'name': 'open override fun onViewDetachedFromWindow(holder: RecyclerView.ViewHolder)', 'description':'io.spokestack.tray.message.MessageAdapter.onViewDetachedFromWindow', 'location':'-spokestack-tray/io.spokestack.tray.message/-message-adapter/on-view-detached-from-window.html', 'searchKey':'onViewDetachedFromWindow'},
{'name': 'fun namespaced_key(key: String): String', 'description':'io.spokestack.tray.namespaced_key', 'location':'-spokestack-tray/io.spokestack.tray/namespaced_key.html', 'searchKey':'namespaced_key'},
{'name': 'fun <T> MutableLiveData<T>.notifyObserver()', 'description':'io.spokestack.tray.notifyObserver', 'location':'-spokestack-tray/io.spokestack.tray/notify-observer.html', 'searchKey':'notifyObserver'}]
